{"version":3,"sources":["MainClass.js","App.js","reportWebVitals.js","index.js"],"names":["MainClass","props","state","pincode","hospitals","message","handleChange","bind","handleSubmit","event","this","setState","target","value","data","console","log","centers","centres","availablity","forEach","centre","sessions","session","min_age_limit","hospitalObj","district","district_name","name","push","fetch","then","response","json","processData","preventDefault","onSubmit","htmlFor","type","id","onChange","map","hospital","React","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACTC,QAAS,GACTC,UAAW,GACXC,QAAS,IAGb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATH,E,gDAYnB,SAAaE,GACXC,KAAKC,SAAS,CAACR,QAASM,EAAMG,OAAOC,U,yBAEvC,SAAYC,GAERC,QAAQC,IAAI,yBAA0BF,EAAMA,EAAKG,SACjD,IAAIC,EAAUJ,EAAKG,QACfb,EAAY,GACZe,EAAc,OAClBD,EAAQE,SAAQ,SAAAC,GACZA,EAAOC,SAASF,SAAQ,SAAAG,GAChBA,EAAQC,cAAgB,KACxBL,EAAc,gBAGtB,IAAIM,EAAc,CACdC,SAAUL,EAAOM,cACjBC,KAAMP,EAAOO,KACbT,eAEJf,EAAUyB,KAAKJ,MAEnBf,KAAKC,SAAS,CAACP,UAAWA,IAC1BM,KAAKC,SAAS,CAACN,QAASc,M,0BAE5B,SAAaV,GAAQ,IAAD,OAClBM,QAAQC,IAAI,yBAA0BN,KAAKR,MAAMC,SACjD2B,MAAM,sFAAD,OAAuFpB,KAAKR,MAAMC,QAAlG,qBACJ4B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAjB,GACJC,QAAQC,IAAIF,GACZ,EAAKoB,YAAYpB,MAEnBL,EAAM0B,mB,oBAGR,WACE,OACE,uBAAMC,SAAU1B,KAAKF,aAArB,UACE,wBAAO6B,QAAQ,UAAf,2BAEE,uBAAOC,KAAK,OAAOC,GAAG,UAAU1B,MAAOH,KAAKR,MAAMC,QAASqC,SAAU9B,KAAKJ,kBAE5E,uBAAOgC,KAAK,SAASzB,MAAM,UAExBH,KAAKR,MAAME,UAAUqC,KAAI,SAAAC,GAAQ,OAC9B,+BACA,6BACKA,EAAShB,WAEd,6BACKgB,EAASd,OAEd,6BACKc,EAASvB,oBAMpB,gDAAmBT,KAAKR,MAAMG,kB,GAzEDsC,IAAMC,WCY9BC,MAZf,WAEE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACC,8CACA,cAAC,EAAD,UCIQC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9f1d0a48.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class MainClass extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          pincode: '',\n          hospitals: [],\n          message: ''\n        };\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event) {\n      this.setState({pincode: event.target.value});\n    }\n    processData(data) {\n        // checks if any of the age is less than 45+\n        console.log('logging data & centers', data, data.centers);\n        let centres = data.centers;\n        let hospitals = [];\n        let availablity = 'None';\n        centres.forEach(centre => {\n            centre.sessions.forEach(session=> {\n                if (session.min_age_limit < 45) {\n                    availablity = 'Available';\n                }\n            });\n            let hospitalObj = {\n                district: centre.district_name,\n                name: centre.name,\n                availablity\n            };\n            hospitals.push(hospitalObj);\n        });\n        this.setState({hospitals: hospitals});\n        this.setState({message: availablity});\n    }\n    handleSubmit(event) {\n      console.log('pin code request sent:', this.state.pincode);\n      fetch(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=${this.state.pincode}&date=01-05-2021`)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        this.processData(data);\n      });\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"pincode\">Enter pincode:\n            \n            <input type=\"text\" id=\"pincode\" value={this.state.pincode} onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Check\" />\n          \n            {this.state.hospitals.map(hospital=> (\n                <ul>\n                <li>\n                    {hospital.district}\n                </li>\n                <li>\n                    {hospital.name}\n                </li>\n                <li>\n                    {hospital.availablity}\n                </li>\n                </ul>\n            ))}\n            \n\n          <div>availablity: {this.state.message}</div>\n        </form>\n        \n      )\n    }\n  }\n","import './App.css';\nimport MainClass from './MainClass';\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <h1>Check Status</h1>\n       <MainClass />\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}